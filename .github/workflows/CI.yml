name: CI

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python --version
          pip install -r dev-requirements.txt
      - name: Lint with black
        run: black --check .
      - name: Run tests
        run: |
          cd $GITHUB_WORKSPACE
          pytest

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v3

      - name: Setup Dockerfile
        run: |
          cd $GITHUB_WORKSPACE
          sed -i 's|<API_SECRET>|${{ secrets.API_SECRET }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<DOMAIN_NAME>|${{ secrets.DOMAIN_NAME }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<MAIL_USERNAME>|${{ secrets.MAIL_USERNAME }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<MAIL_PASSWORD>|${{ secrets.MAIL_PASSWORD }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<MAIL_FROM>|${{ secrets.MAIL_FROM }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<MAIL_PORT>|${{ secrets.MAIL_PORT }}|' $GITHUB_WORKSPACE/Dockerfile
          sed -i 's|<MAIL_SERVER>|${{ secrets.MAIL_SERVER }}|' $GITHUB_WORKSPACE/Dockerfile

      - name: Setup fly.io
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to fly.io
        run: |
          flyctl scale count 1
          flyctl volumes create hymns_data --region jnb --size 3 --no-encryption --require-unique-zone
          flyctl deploy --remote-only -r jnb
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
